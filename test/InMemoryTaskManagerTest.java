import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;

class InMemoryTaskManagerTest {
    TaskManager taskManager = Managers.getDefault();

    Task task = new Task("Задача 1","Описание задачи 1");
    Epic epic = new Epic("Эпик 1", "Описание эпика 1", new ArrayList<>());
    Subtask subtask1 = new Subtask("Подзадача 1","Описание подзадачи 1",epic.getId());
    Subtask subtask2 = new Subtask("Подзадача 2", "Описание подзадачи 2", epic.getId());

    @Test
    public void testAddDifferentTaskTypes(){
        taskManager.addTask(task);
        taskManager.addEpic(epic);
        taskManager.addSubtask(subtask1);

        assertNotNull(taskManager.getTask(task.getId()));
        assertNotNull(taskManager.getEpic(epic.getId()));
        assertNotNull(taskManager.getSubtask(subtask1.getId()));
    }

    @Test
    public void shouldNotConflictBetweenManualAndAutoGeneratedIds() {
        Task manualTask  = new Task("Задача 2","Описание задачи 2",4);
        assertNotEquals(manualTask.getId(), task.getId());
    }

    @Test
    public void shouldPreserveTaskFieldsWhenAddedToManager(){
        taskManager.addTask(task);
        taskManager.addEpic(epic);
        taskManager.addSubtask(subtask1);

        assertEquals(task,taskManager.getTask(task.getId()));
        assertEquals(epic,taskManager.getEpic(epic.getId()));
        assertEquals(subtask1,taskManager.getSubtask(subtask1.getId()));
    }

    @Test
    void deletingEpicShouldDeleteSubtasks() {
        taskManager.addEpic(epic);

        Subtask subtask = new Subtask("Подзадача", "Описание подзадачи", epic.getId());
        taskManager.addSubtask(subtask);

        taskManager.deleteEpicById(epic.getId());
        assertNull(taskManager.getSubtask(subtask.getId()));
    }

    @Test
    void shouldUpdateTaskStatusCorrectlyThroughUpdateMethod() {
        Task task = new Task("Задача", "Описание");
        taskManager.addTask(task);

        assertEquals(Status.NEW, taskManager.getTask(task.getId()).getStatus());

        Task updatedTask = new Task("Задача", "Описание", Status.DONE, task.getId());
        taskManager.updateTask(updatedTask);

        assertEquals(Status.DONE, taskManager.getTask(task.getId()).getStatus());
    }

}